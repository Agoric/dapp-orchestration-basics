diff --git a/dist/node/axios.cjs b/dist/node/axios.cjs
index f6fedeb8afd6bd144ca28c09f5fdb2f4eb04bf21..0ff6d5329deaffe10ce6dac5721b8de2eabfda24 100644
--- a/dist/node/axios.cjs
+++ b/dist/node/axios.cjs
@@ -369,9 +369,9 @@ function merge(/* obj1, obj2, obj3, ... */) {
 const extend = (a, b, thisArg, {allOwnKeys}= {}) => {
   forEach(b, (val, key) => {
     if (thisArg && isFunction(val)) {
-      a[key] = bind(val, thisArg);
+      Object.defineProperty(a, key, {value: bind(val, thisArg)});
     } else {
-      a[key] = val;
+      Object.defineProperty(a, key, {value: val});
     }
   }, {allOwnKeys});
   return a;
@@ -402,7 +402,9 @@ const stripBOM = (content) => {
  */
 const inherits = (constructor, superConstructor, props, descriptors) => {
   constructor.prototype = Object.create(superConstructor.prototype, descriptors);
-  constructor.prototype.constructor = constructor;
+  Object.defineProperty(constructor, 'constructor', {
+    value: constructor
+  });
   Object.defineProperty(constructor, 'super', {
     value: superConstructor.prototype
   });
@@ -564,12 +566,14 @@ const isRegExp = kindOfTest('RegExp');
 
 const reduceDescriptors = (obj, reducer) => {
   const descriptors = Object.getOwnPropertyDescriptors(obj);
-  const reducedDescriptors = {};
+  let reducedDescriptors = {};
 
   forEach(descriptors, (descriptor, name) => {
     let ret;
     if ((ret = reducer(descriptor, name, obj)) !== false) {
-      reducedDescriptors[name] = ret || descriptor;
+      reducedDescriptors = {...reducedDescriptors, 
+        [name]: ret || descriptor
+      };
     }
   });
 
