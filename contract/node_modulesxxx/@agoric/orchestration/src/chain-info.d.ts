/**
 * @file static declaration of known chain types will allow type support for
 * additional chain-specific operations like `liquidStake`
 */
import type { CosmosChainInfo, EthChainInfo, IcaAccount, ICQConnection, LiquidStakingMethods, StakingAccountActions, StakingAccountQueries } from './types.js';
export type KnownChains = {
    stride: {
        info: CosmosChainInfo;
        methods: IcaAccount & ICQConnection & StakingAccountActions & StakingAccountQueries & LiquidStakingMethods;
    };
    cosmos: {
        info: CosmosChainInfo;
        methods: IcaAccount & ICQConnection & StakingAccountActions & StakingAccountQueries;
    };
    agoric: {
        info: CosmosChainInfo;
        methods: {
            /**
             * Register a hook to intercept an incoming IBC Transfer and handle it.
             * Calling without arguments will unregister the hook.
             */
            interceptTransfer: (tap?: {
                upcall: (args: any) => Promise<any>;
            }) => Promise<void>;
        };
    };
    celestia: {
        info: CosmosChainInfo;
        methods: IcaAccount & ICQConnection & StakingAccountActions & StakingAccountQueries;
    };
    osmosis: {
        info: CosmosChainInfo;
        methods: IcaAccount & ICQConnection & StakingAccountActions & StakingAccountQueries;
    };
};
export type ChainInfo = CosmosChainInfo | EthChainInfo;
//# sourceMappingURL=chain-info.d.ts.map