/**
 * @param {TimerService} timer
 * @param {TimerBrand} timerBrand
 */
export function makeTimestampHelper(timer: TimerService, timerBrand: TimerBrand): {
    /**
     * Takes the current time from ChainTimerService and adds a relative
     * time to determine a timeout timestamp in nanoseconds.
     * Useful for {@link MsgTransfer.timeoutTimestamp}.
     * @param {RelativeTimeRecord} [relativeTime] defaults to 5 minutes
     * @returns {Promise<bigint>} Timeout timestamp in absolute nanoseconds since unix epoch
     */
    getTimeoutTimestampNS(relativeTime?: RelativeTimeRecord | undefined): Promise<bigint>;
};
/**
 * @import {RelativeTimeRecord, TimerBrand, TimerService} from '@agoric/time';
 * @import {MsgTransfer} from '@agoric/cosmic-proto/ibc/applications/transfer/v1/tx.js';
 */
export const SECONDS_PER_MINUTE: 60n;
export const NANOSECONDS_PER_SECOND: 1000000000n;
export function dateInSeconds(date: Date): bigint;
export type TimestampHelper = Awaited<ReturnType<typeof makeTimestampHelper>>;
import type { TimerService } from '@agoric/time';
import type { TimerBrand } from '@agoric/time';
import type { RelativeTimeRecord } from '@agoric/time';
//# sourceMappingURL=time.d.ts.map