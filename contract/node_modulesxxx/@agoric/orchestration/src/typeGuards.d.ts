export const ConnectionHandlerI: import("@endo/patterns").InterfaceGuard<{
    onOpen: import("@endo/patterns").MethodGuard;
    onClose: import("@endo/patterns").MethodGuard;
    onReceive: import("@endo/patterns").MethodGuard;
}>;
export namespace ChainAddressShape {
    let address: import("@endo/patterns").Matcher;
    let chainId: import("@endo/patterns").Matcher;
    let addressEncoding: import("@endo/patterns").Matcher;
}
export namespace Proto3Shape {
    let typeUrl: import("@endo/patterns").Matcher;
    let value: import("@endo/patterns").Matcher;
}
export namespace CoinShape {
    let value_1: import("@endo/patterns").Matcher;
    export { value_1 as value };
    export let denom: import("@endo/patterns").Matcher;
}
export namespace ChainAmountShape {
    let denom_1: import("@endo/patterns").Matcher;
    export { denom_1 as denom };
    let value_2: import("@endo/patterns").Matcher;
    export { value_2 as value };
}
export const AmountArgShape: import("@endo/patterns").Matcher;
export const DelegationShape: import("@endo/patterns").Matcher;
export const IBCTransferOptionsShape: import("@endo/patterns").Matcher;
//# sourceMappingURL=typeGuards.d.ts.map